- name: Prepare random number
  set_fact:
    rpfx: "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"
    cert1_file: "cert1.txt"
    cert2_file: "cert2.txt"

- name: Create a virtual network
  azure_rm_virtualnetwork:
    name: vnet{{ rpfx }}
    resource_group: "{{ resource_group }}"
    address_prefixes_cidr:
        - 10.1.0.0/16
        - 172.100.0.0/16
    dns_servers:
        - 127.0.0.1
        - 127.0.0.2
- name: Create a subnet
  azure_rm_subnet:
    name: subnet{{ rpfx }}
    virtual_network_name: vnet{{ rpfx }}
    resource_group: "{{ resource_group }}"
    address_prefix_cidr: 10.1.0.0/24
  register: subnet_output

- name: Create instance of Application Gateway
  azure_rm_appgateway:
    resource_group: "{{ resource_group }}"
    name: "appgateway{{ rpfx }}"
    sku:
      name: standard_small
      tier: standard
      capacity: 2
    ssl_policy:
      policy_type: predefined
      policy_name: ssl_policy20170401
    ssl_certificates:
      - name: cert2
        password: your-password
        data: "{{ lookup('file', cert2_file) }}"
    gateway_ip_configurations:
      - subnet:
          id: "{{ subnet_output.state.id }}"
        name: app_gateway_ip_config
    frontend_ip_configurations:
      - subnet:
          id: "{{ subnet_output.state.id }}"
        name: sample_gateway_frontend_ip_config
    frontend_ports:
      - port: 90
        name: ag_frontend_port
      - port: 80
        name: http_frontend_port
      - port: 443
        name: https_frontend_port
    backend_address_pools:
      - backend_addresses: []
        name: test_backend_address_pool
    probes:
     - name: custom_probe
       protocol: http
       host: 10.0.0.4
       path: /healthz
       interval: 30
       timeout: 30
       unhealthy_threshold: 3
    backend_http_settings_collection:
      - port: 80
        protocol: http
        cookie_based_affinity: enabled
        probe: custom_probe
        name: sample_appgateway_http_settings
    http_listeners:
      - frontend_ip_configuration: sample_gateway_frontend_ip_config
        frontend_port: ag_frontend_port
        protocol: https
        ssl_certificate: cert2
        name: sample_http_listener
      - frontend_ip_configuration: sample_gateway_frontend_ip_config
        frontend_port: http_frontend_port
        protocol: http
        name: http_listener
    request_routing_rules:
      - rule_type: Basic
        backend_address_pool: test_backend_address_pool
        backend_http_settings: sample_appgateway_http_settings
        http_listener: sample_http_listener
        name: rule1
      - rule_type: Basic
        http_listener: http_listener
        redirect_configuration: redirect_site_to_https
        name: http_redirect_rule
    redirect_configurations:
     - redirect_type: permanent
       target_listener: sample_http_listener
       include_path: true
       include_query_string: true
       name: redirect_site_to_https
  register: output
- name: Assert the resource instance is well created
  assert:
    that:
      - output.changed

- name: Create host foo
  azure_rm_appgateway_host:
    resource_group: "{{ resource_group }}"
    name: "appgateway{{ rpfx }}"
    backend_address_pools:
    - backend_addresses:
      - ip_address: "10.1.0.10"
      - ip_address: "10.1.0.11"
      name: "{{ name }}-backend-pool"
    backend_http_settings_collection:
    - port: 8080
      protocol: http
      cookie_based_affinity: disabled
      name: "{{ name }}-http-settings"
    http_listeners:
    - frontend_port: 443
      ssl_certificate: "cert2"
      name: "{{ name }}-http-listener"
      protocol: "Https"
      host_name: "{{ name }}.mydomain.org"
    request_routing_rules:
    - rule_type: Basic
      backend_address_pool: "{{ name }}-backend-pool"
      backend_http_settings: "{{ name }}-http-settings"
      http_listener: "{{ name }}-http-listener"
      name: "{{ name }}-rule-public"
  vars:
    name: "foo-test"
  register: output
- name: Assert the resource instance is well created
  assert:
    that:
      - output.changed

- name: Update host foo - no change
  azure_rm_appgateway_host:
    resource_group: "{{ resource_group }}"
    name: "appgateway{{ rpfx }}"
    backend_address_pools:
    - backend_addresses:
      - ip_address: "10.1.0.10"
      - ip_address: "10.1.0.11"
      name: "{{ name }}-backend-pool"
    backend_http_settings_collection:
    - port: 8080
      protocol: http
      cookie_based_affinity: disabled
      name: "{{ name }}-http-settings"
    http_listeners:
    - frontend_port: 443
      ssl_certificate: "cert2"
      name: "{{ name }}-http-listener"
      protocol: "Https"
      host_name: "{{ name }}.mydomain.org"
    request_routing_rules:
    - rule_type: Basic
      backend_address_pool: "{{ name }}-backend-pool"
      backend_http_settings: "{{ name }}-http-settings"
      http_listener: "{{ name }}-http-listener"
      name: "{{ name }}-rule-public"
  vars:
    name: "foo-test"
  register: output
- name: Assert no change
  assert:
    that:
      - not output.changed

- name: Create host bar
  azure_rm_appgateway_host:
    resource_group: "{{ resource_group }}"
    name: "appgateway{{ rpfx }}"
    backend_address_pools:
    - backend_addresses:
      - ip_address: "10.1.0.20"
      - ip_address: "10.1.0.21"
      name: "{{ name }}-backend-pool"
    backend_http_settings_collection:
    - port: 8080
      protocol: http
      cookie_based_affinity: disabled
      name: "{{ name }}-http-settings"
    http_listeners:
    - frontend_port: 443
      ssl_certificate: "cert2"
      name: "{{ name }}-http-listener"
      protocol: "Https"
      host_name: "{{ name }}.mydomain.org"
    request_routing_rules:
    - rule_type: Basic
      backend_address_pool: "{{ name }}-backend-pool"
      backend_http_settings: "{{ name }}-http-settings"
      http_listener: "{{ name }}-http-listener"
      name: "{{ name }}-rule-public"
  vars:
    name: "bar-test"
  register: output
- name: Assert creation
  assert:
    that:
      - output.changed

- name: Delete host foo
  azure_rm_appgateway_host:
    resource_group: "{{ resource_group }}"
    name: "appgateway{{ rpfx }}"
    backend_address_pools:
    - name: "{{ name }}-backend-pool"
    backend_http_settings_collection:
    - name: "{{ name }}-http-settings"
    http_listeners:
    - name: "{{ name }}-http-listener"
    request_routing_rules:
    - name: "{{ name }}-rule-public"
    state: absent
  vars:
    name: "foo-test"
  register: output
- name: Assert change
  assert:
    that:
      - output.changed

- name: Delete Application Gateway
  azure_rm_appgateway:
    resource_group: "{{ resource_group }}"
    name: "appgateway{{ rpfx }}"
    state: absent

- name: Delete virtual network
  azure_rm_virtualnetwork:
    name: vnet{{ rpfx }}
    resource_group: "{{ resource_group }}"
    state: absent
